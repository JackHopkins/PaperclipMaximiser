'\nfrom factorio_instance import *\n\n"""\nObjective: Craft 1 Electric Mining Drill\n\nPlanning:\nWe need to craft 1 electric mining drill. We have some resources in a wooden chest on the map.\nWe need to gather additional iron ore and coal, craft a stone furnace, smelt iron plates,\nand then craft the electric mining drill.\n"""\n\n"""\nStep 1: Print recipe for Electric Mining Drill\n"""\nrecipe = get_prototype_recipe(Prototype.ElectricMiningDrill)\nprint("Electric Mining Drill Recipe:")\nprint(f"Ingredients: {recipe.ingredients}")\nprint("Total resources needed: 5 copper plates and 23 iron plates")\n\n"""\nStep 2: Analyze current inventory in the wooden chest\n"""\nchest_pos = Position(x=-3.5, y=-11.5)\nchest = get_entity(Prototype.WoodenChest, position=chest_pos)\nprint("Current inventory in wooden chest:")\nprint(chest.inventory)\n\n"""\nStep 3: Calculate remaining resources needed\n"""\niron_plates_needed = 23 - chest.inventory.get(\'iron-plate\', 0)\nprint(f"Additional iron plates needed: {iron_plates_needed}")\n\n"""\nStep 4: Gather raw resources\n"""\nresources_to_gather = [\n    (Resource.IronOre, iron_plates_needed),\n    (Resource.Coal, 5)\n]\n\nfor resource_type, required_quantity in resources_to_gather:\n    resource_position = nearest(resource_type)\n    move_to(resource_position)\n    harvested = harvest_resource(resource_position, required_quantity)\n    current_inventory = inspect_inventory()\n    actual_quantity = current_inventory.get(resource_type, 0)\n    assert actual_quantity >= required_quantity, f"Failed to gather enough {resource_type}. Required: {required_quantity}, Actual: {actual_quantity}"\n    print(f"Successfully gathered {actual_quantity} {resource_type}")\n\n"""\nStep 5: Craft and set up Stone Furnace\n"""\nmove_to(chest_pos)\nextracted_stone = extract_item(Prototype.Stone, chest_pos, quantity=5)\ncraft_item(Prototype.StoneFurnace, quantity=1)\nfurnace = place_entity_next_to(Prototype.StoneFurnace, direction=Direction.RIGHT, reference_position=chest_pos)\n\n"""\nStep 6: Prepare furnace for smelting\n"""\nmove_to(furnace.position)\ninsert_item(Prototype.Coal, furnace, quantity=5)\n\n"""\nStep 7: Smelt iron plates\n"""\niron_ore_in_inventory = inspect_inventory().get(Prototype.IronOre, 0)\ninsert_item(Prototype.IronOre, furnace, quantity=iron_ore_in_inventory)\n\nsmelting_time = 0.7 * iron_ore_in_inventory\nsleep(smelting_time)\n\nfor _ in range(5):  # Try extracting up to 5 times\n    extract_item(Prototype.IronPlate, furnace.position, quantity=iron_ore_in_inventory)\n    current_iron_plates = inspect_inventory().get(Prototype.IronPlate, 0)\n    if current_iron_plates >= iron_plates_needed:\n        break\n    sleep(2)\n\nprint(f"Smelted iron plates: {current_iron_plates}")\n\n"""\nStep 8: Gather all required materials from chest\n"""\nmove_to(chest_pos)\nextract_item(Prototype.IronPlate, chest_pos, quantity=7)\nextract_item(Prototype.CopperPlate, chest_pos, quantity=13)\n\n"""\nStep 9: Craft the Electric Mining Drill\n"""\ninventory = inspect_inventory()\nassert inventory.get(Prototype.IronPlate, 0) >= 23, "Not enough iron plates"\nassert inventory.get(Prototype.CopperPlate, 0) >= 5, "Not enough copper plates"\n\ncraft_item(Prototype.ElectricMiningDrill, quantity=1)\n\n"""\nStep 10: Verify the result\n"""\nfinal_inventory = inspect_inventory()\nelectric_mining_drill_count = final_inventory.get(Prototype.ElectricMiningDrill, 0)\nassert electric_mining_drill_count >= 1, f"Failed to craft Electric Mining Drill. Count: {electric_mining_drill_count}"\n\nprint(f"Successfully crafted {electric_mining_drill_count} Electric Mining Drill(s)")\nprint("Final inventory:")\nprint(final_inventory)\n'